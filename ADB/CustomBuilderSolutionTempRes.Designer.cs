//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ADB {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CustomBuilderSolutionTempRes {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CustomBuilderSolutionTempRes() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ADB.CustomBuilderSolutionTempRes", typeof(CustomBuilderSolutionTempRes).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   使用此强类型资源类，为所有资源查找
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Collections.Generic;
        ///using System.Text;
        ///using ADB.Factories;
        ///
        ///namespace {RootNamespace}
        ///{
        ///	/*	 
        ///	以下公共（或受保护）属性是由基类定义的，编写自定义文档生成器可能需要
        ///	DataProvider	获取一个IGetData接口，用于获取生成文档所需的数据（如：程序集的成员及其XML注释）
        ///	Interact		获取一个IInteract接口，用于同文档生成程序主窗口进行交互
        /// 
        ///	通用方法:
        ///	DocumentBuilderUtility.GetMemberID			获取指定对象在XML文档注释中的ID字符串
        ///	DocumentBuilderUtility.GetTypeDefinition	获取一个类型的定义 
        ///	
        ///	具体用法参照ADB帮助文档
        ///	*/
        ///	
        ///	public class {CustomBuilderName} : DocumentBuilder
        ///	{
        ///		public {CustomBuilderName} [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Code_Common {
            get {
                return ResourceManager.GetString("Code_Common", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Collections.Generic;
        ///using System.Text;
        ///using ADB.Factories;
        ///
        ///namespace {RootNamespace}
        ///{
        ///	/*
        ///	以下公共（或受保护）方法是由基类定义的，编写自定义文档生成器可能需要
        ///	GetAllNamespaces		获取所有的命名空间的名称
        ///	GetFileName				获取类型或成员的页面文件的文件名
        ///	GetNamespaceFileName	获取命名空间对应的页面文件的文件名 
        ///	
        ///	以下公共（或受保护）属性是由基类定义的，编写自定义文档生成器可能需要
        ///	DataProvider	获取一个IGetData接口，用于获取生成文档所需的数据（如：程序集的成员及其XML注释）
        ///	Interact		获取一个IInteract接口，用于同文档生成程序主窗口进行交互
        ///	
        ///	通用方法:
        ///	DocumentBuilderUtility.GetMemberID			获取指定对象在XML文档注释中的ID字符串
        ///	DocumentBuilderUti [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Code_CustomStyle {
            get {
                return ResourceManager.GetString("Code_CustomStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Collections.Generic;
        ///using System.Text;
        ///using ADB.Factories;
        ///
        ///namespace {RootNamespace}
        ///{
        ///	/*
        ///	以下公共（或受保护）方法是由基类定义的，编写自定义文档生成器可能需要：	
        ///	GetElementBeginTag	获取XML元素的开始标志
        ///	GetElementEndTag	获取XML元素的结束标志
        ///	GetInnerTags		将XML注释所有子级转换成HTML	
        ///	GetAllNamespaces		获取所有的命名空间的名称
        ///	GetFileName				获取类型或成员的页面文件的文件名
        ///	GetNamespaceFileName	获取命名空间对应的页面文件的文件名 
        ///
        ///	以下公共（或受保护）属性是由基类定义的，编写自定义文档生成器可能需要：	
        ///	Target				目标文件路径
        ///	Title				文档标题 
        ///	HtmlTempDirectory	获取存放页面模板的文件夹的路径
        ///	DataProvider		获取一个IG [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Code_ExtendTag {
            get {
                return ResourceManager.GetString("Code_ExtendTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;!--
        ///注意：
        ///1.CustomBuilder必须有Name和Entry两个属性(区分大小写),同一程序集内可以有多个文档生成器；
        ///2.Entry必须使用类的完全限定名（命名空间.类名）；
        ///3.&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;指定的编码必须和文件保存的编码一致。
        ///4.该配置文件的名称必须和包含生成器的程序集的名称一样（例如：程序集的名称为CustomBuilder.dll则配置文件应该命名为CustomBuilder.builder）
        ///--&gt;
        ///&lt;Builders ADBVersion=&quot;2.3.0.0&quot;&gt;
        ///  &lt;CustomBuilder Localizable=&quot;true&quot;  Entry=&quot;{RootNamespace}.{CustomBuilderName}&quot;&gt;
        ///    &lt;Profile Language=&quot;zh-CHS&quot; Name=&quot;{CustomBuilderDescption}&quot;/&gt;
        ///  &lt;/CustomBuilder&gt;
        ///&lt;/Builders [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Config {
            get {
                return ResourceManager.GetString("Config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System.Reflection;
        ///using System.Runtime.CompilerServices;
        ///using System.Runtime.InteropServices;
        ///
        ///// 有关程序集的常规信息通过下列属性集
        ///// 控制。更改这些属性值可修改
        ///// 与程序集关联的信息。
        ///[assembly: AssemblyTitle(&quot;{CustomBuilderName}&quot;)]
        ///[assembly: AssemblyDescription(&quot;&quot;)]
        ///[assembly: AssemblyConfiguration(&quot;&quot;)]
        ///[assembly: AssemblyCompany(&quot;&quot;)]
        ///[assembly: AssemblyProduct(&quot;{CustomBuilderName}&quot;)]
        ///[assembly: AssemblyCopyright(&quot;版权所有 (C) 2008&quot;)]
        ///[assembly: AssemblyTrademark(&quot;&quot;)]
        ///[assembly: AssemblyCulture(&quot;&quot;)]
        ///
        ///// 将 ComVisible 设置为 f [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Info {
            get {
                return ResourceManager.GetString("Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;Project DefaultTargets=&quot;Build&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;
        ///  &lt;PropertyGroup&gt;
        ///    &lt;Configuration Condition=&quot; &apos;$(Configuration)&apos; == &apos;&apos; &quot;&gt;Debug&lt;/Configuration&gt;
        ///    &lt;Platform Condition=&quot; &apos;$(Platform)&apos; == &apos;&apos; &quot;&gt;AnyCPU&lt;/Platform&gt;
        ///    &lt;ProductVersion&gt;8.0.50727&lt;/ProductVersion&gt;
        ///    &lt;SchemaVersion&gt;2.0&lt;/SchemaVersion&gt;
        ///    &lt;ProjectGuid&gt;{ProjectGUID}&lt;/ProjectGuid&gt;
        ///    &lt;OutputType&gt;Library&lt;/OutputType&gt;
        ///    &lt;AppDesignerFolder&gt;Properties&lt;/AppDesignerFolder&gt;
        ///    &lt;RootNamespace&gt;{Root [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Project {
            get {
                return ResourceManager.GetString("Project", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;Project xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;
        ///  &lt;PropertyGroup Condition=&quot; &apos;$(Configuration)|$(Platform)&apos; == &apos;Debug|AnyCPU&apos; &quot;&gt;
        ///    &lt;StartAction&gt;Program&lt;/StartAction&gt;
        ///    &lt;StartProgram&gt;{StartProgram}&lt;/StartProgram&gt;
        ///    &lt;StartArguments&gt;&quot;{StartArguments}&quot;&lt;/StartArguments&gt;
        ///  &lt;/PropertyGroup&gt;
        ///&lt;/Project&gt; 的本地化字符串。
        /// </summary>
        internal static string Project_User {
            get {
                return ResourceManager.GetString("Project_User", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 .NET文档生成工具ADB已经为您创建了生成自定义文档生成器的解决方案{CustomBuilderName}
        ///
        ///注意事项：
        ///1.如果在生成工程后改变了ADB的安装位置，请重新配置工程的调试参数;
        ///2.如果在生成工程后修改了{CustomBuilderName}的类名或其所在命名空间，请修改配置文件：
        ///  Bin\Release\{CustomBuilderName}\{CustomBuilderName}.builder
        ///  中&lt;CustomBuilder&gt;的Entry属性 的本地化字符串。
        /// </summary>
        internal static string Readme {
            get {
                return ResourceManager.GetString("Readme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 
        ///Microsoft Visual Studio Solution File, Format Version 9.00
        ///# Visual Studio 2005
        ///Project(&quot;{CustomBuilderProjectGUID}&quot;) = &quot;{CustomBuilderName}&quot;, &quot;{CustomBuilderName}\{CustomBuilderName}.csproj&quot;, &quot;{ProjectGUID}&quot;
        ///EndProject
        ///Global
        ///	GlobalSection(SolutionConfigurationPlatforms) = preSolution
        ///		Debug|Any CPU = Debug|Any CPU
        ///		Release|Any CPU = Release|Any CPU
        ///	EndGlobalSection
        ///	GlobalSection(ProjectConfigurationPlatforms) = postSolution
        ///		{ProjectGUID}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
        ///		{Proje [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Solution {
            get {
                return ResourceManager.GetString("Solution", resourceCulture);
            }
        }
    }
}
